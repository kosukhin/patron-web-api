{"version":3,"file":"patron-web-api.mjs","sources":["../src/history-api/HistoryPoppedPage.ts","../src/history-api/HistoryNewPage.ts","../src/fetch/Fetched.ts"],"sourcesContent":["import { give, GuestType } from \"patron-oop\";\n\nexport class HistoryPoppedPage {\n  public constructor(private pageSource: GuestType<string>) {}\n\n  public watchPop() {\n    window.addEventListener(\"popstate\", (event) => {\n      const { state } = event;\n      if (state?.url) {\n        give(state.url, this.pageSource);\n      }\n    });\n  }\n}\n","import { GuestObjectType } from \"patron-oop\";\n\nexport class HistoryNewPage implements GuestObjectType<string> {\n  public give(url: string) {\n    const correctUrl = location.href.replace(location.origin, \"\");\n    if (url === correctUrl) {\n      return this;\n    }\n    history.pushState(\n      {\n        url,\n        date: Date.now(),\n      },\n      \"Loading...\",\n      url,\n    );\n    return this;\n  }\n}\n","import { Guest, SourceWithPool } from \"patron-oop\";\n\ninterface FetchRequestType extends RequestInit {\n  url: string;\n  asJson: boolean;\n}\n\n/**\n * Wrapper around FetchAPI\n * https://kosukhin.github.io/patron-web-api/#/fetch/fetched\n */\nexport class Fetched<T> {\n  private source = new SourceWithPool<T>();\n\n  public constructor(private errors: Guest<Error>) {}\n\n  public do() {\n    return new Guest<FetchRequestType>((request) => {\n      fetch(request.url, request)\n        .then((resp) => {\n          if (!resp.ok) {\n            return Promise.reject(new Error(\"Error of status \" + resp.status));\n          }\n          if (request.asJson) {\n            return resp.json();\n          }\n          return resp.text();\n        })\n        .then((content) => {\n          this.source.give(content);\n        })\n        .catch((e) => {\n          this.errors.give(e);\n        });\n    });\n  }\n\n  public result() {\n    return this.source;\n  }\n}\n"],"names":[],"mappings":";;AAEO,MAAM,iBAAkB,CAAA;AAAA,EACtB,YAAoB,UAA+B,EAAA;AAA/B,IAAA,IAAA,CAAA,UAAA,GAAA,UAAA;AAAA;AAAgC,EAEpD,QAAW,GAAA;AAChB,IAAO,MAAA,CAAA,gBAAA,CAAiB,UAAY,EAAA,CAAC,KAAU,KAAA;AAC7C,MAAM,MAAA,EAAE,OAAU,GAAA,KAAA;AAClB,MAAA,IAAI,OAAO,GAAK,EAAA;AACd,QAAK,IAAA,CAAA,KAAA,CAAM,GAAK,EAAA,IAAA,CAAK,UAAU,CAAA;AAAA;AACjC,KACD,CAAA;AAAA;AAEL;;ACXO,MAAM,cAAkD,CAAA;AAAA,EACtD,KAAK,GAAa,EAAA;AACvB,IAAA,MAAM,aAAa,QAAS,CAAA,IAAA,CAAK,OAAQ,CAAA,QAAA,CAAS,QAAQ,EAAE,CAAA;AAC5D,IAAA,IAAI,QAAQ,UAAY,EAAA;AACtB,MAAO,OAAA,IAAA;AAAA;AAET,IAAQ,OAAA,CAAA,SAAA;AAAA,MACN;AAAA,QACE,GAAA;AAAA,QACA,IAAA,EAAM,KAAK,GAAI;AAAA,OACjB;AAAA,MACA,YAAA;AAAA,MACA;AAAA,KACF;AACA,IAAO,OAAA,IAAA;AAAA;AAEX;;;;;ACPO,MAAM,OAAW,CAAA;AAAA,EAGf,YAAoB,MAAsB,EAAA;AAAtB,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAF3B,IAAQ,aAAA,CAAA,IAAA,EAAA,QAAA,EAAS,IAAI,cAAkB,EAAA,CAAA;AAAA;AAEW,EAE3C,EAAK,GAAA;AACV,IAAO,OAAA,IAAI,KAAwB,CAAA,CAAC,OAAY,KAAA;AAC9C,MAAA,KAAA,CAAM,QAAQ,GAAK,EAAA,OAAO,CACvB,CAAA,IAAA,CAAK,CAAC,IAAS,KAAA;AACd,QAAI,IAAA,CAAC,KAAK,EAAI,EAAA;AACZ,UAAA,OAAO,QAAQ,MAAO,CAAA,IAAI,MAAM,kBAAqB,GAAA,IAAA,CAAK,MAAM,CAAC,CAAA;AAAA;AAEnE,QAAA,IAAI,QAAQ,MAAQ,EAAA;AAClB,UAAA,OAAO,KAAK,IAAK,EAAA;AAAA;AAEnB,QAAA,OAAO,KAAK,IAAK,EAAA;AAAA,OAClB,CAAA,CACA,IAAK,CAAA,CAAC,OAAY,KAAA;AACjB,QAAK,IAAA,CAAA,MAAA,CAAO,KAAK,OAAO,CAAA;AAAA,OACzB,CAAA,CACA,KAAM,CAAA,CAAC,CAAM,KAAA;AACZ,QAAK,IAAA,CAAA,MAAA,CAAO,KAAK,CAAC,CAAA;AAAA,OACnB,CAAA;AAAA,KACJ,CAAA;AAAA;AACH,EAEO,MAAS,GAAA;AACd,IAAA,OAAO,IAAK,CAAA,MAAA;AAAA;AAEhB;;;;"}